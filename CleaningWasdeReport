##Cleans the monthly WASDE report

library(odbc)
library(tidyverse)
library(tidyr)
library(dplyr)
library(stringr)
library(broom)
library(modelr)

### Load API & database credentials
load('/data/resources/resources')
db_connection_string <- resources$databases$databasename$.connection_string
rm('resources')
databasename <- dbConnect(odbc::odbc(), .connection_string = db_connection_string)

WASDE <-
  DBI::dbGetQuery(databasename,
                  'Select  [source_url], [req_date],[source_modified],[Cell_Value_L],[Cell_Value_H]
                  ,[attribute1],[forecast_month1],[market_year1],[commodity1],[commodity_header1],[Name]
                  ,[Report_Month],[page_title],[sub_report_title],[sub_report_title2],[sub_report_title3]
                  ,[sub_report_subtitle],[attribute2],[forecast_month2]
                  ,[market_year2],[commodity2],[commodity_header2],[sub_report_subtitle3],[region2]
                  ,[attribute3],[forecast_month3],[market_year3],[commodity3],[commodity_header3]
                  ,[m2_unit_descr1],[attribute_group2],[Textbox2],[forecast_month4],[market_year4],[attribute4]
                  ,[forecast_month5],[market_year5],[attribute5],[forecast_month6],[market_year6],[attribute6],[region1]
                  ,[region_header1],[region_header2],[region3],[region_header3],[region4],[region_header4],[region5]
                  ,[region_header5],[region6],[region_header6], [sub_report_footer],[sub_report_footer2],[sub_report_footer3]
                  From WASDE'
  )


# Cleaning prep before we combine columns ---------------------------------


#Makes U.S. Egg Supply NA when it's a Milk attribute and vice versa.
b <- within(WASDE, sub_report_title[is.na(attribute5) == FALSE &
                                      sub_report_title2 == 'U.S. Milk Supply and Use'] <- NA)
b <- within(b, sub_report_title2[is.na(attribute4) == FALSE &
                                   sub_report_title == 'U.S. Egg Supply and Use'] <- NA)
b <- within(b, sub_report_title[is.na(attribute2) == FALSE &
                                  sub_report_title2 == 'U.S. Wheat by Class: Supply and Use'] <- NA)
b <- within(b, sub_report_title2[is.na(attribute1) == FALSE &
                                   str_detect(sub_report_title, "U.S. Wheat Supply")] <- NA)
b <- within(b, sub_report_title2[str_detect(sub_report_title, "U.S. Sugar Supply")] <- NA)
b <- within(b, sub_report_title3[is.na(attribute1) == FALSE &
                                   str_detect(sub_report_title,
                                              "World and U.S. Supply and Use for Grains, Continued")] <- NA)
b <- within(b, sub_report_title[is.na(attribute2) == FALSE &
                                  str_detect(sub_report_title3, "World and U.S. Supply and Use for Cotton")] <- NA)
b <- within(b, sub_report_subtitle3[is.na(attribute1) == FALSE &
                                      str_detect(sub_report_title, "World and U.S. Supply and Use for Grains")] <- NA)
b <- within(b, sub_report_subtitle[is.na(attribute2) == FALSE &
                                     str_detect(sub_report_title3, "World and U.S. Supply and Use for Cotton")] <- NA)

#Fills in the correct commodities for pages with multiple commodities before combining attribute columns

b <- within(b, commodity1[is.na(attribute4) == FALSE &
                            str_detect(sub_report_title, "U.S. Soybeans and Products Supply")] <- "Soybeans")
b <- within(b, commodity1[is.na(attribute5) == FALSE &
                            str_detect(sub_report_title, "U.S. Soybeans and Products Supply")] <- "Soybean Oil")
b <- within(b, commodity1[is.na(attribute6) == FALSE &
                            str_detect(sub_report_title, "U.S. Soybeans and Products Supply")] <- "Soybean Meal")
b <- within(b, commodity1[is.na(attribute1) == FALSE &
                            str_detect(sub_report_title, "U.S. Feed Grain and Corn Supply")] <- "Feed Grains")
b <- within(b, commodity1[is.na(attribute2) == FALSE &
                            str_detect(sub_report_title, "U.S. Feed Grain and Corn Supply")] <- "Corn")
b <- within(b, commodity1[is.na(attribute1) == FALSE &
                            str_detect(sub_report_title, "U.S. Sorghum, Barley, and Oats")] <- "Sorghum")
b <- within(b, commodity1[is.na(attribute2) == FALSE &
                            str_detect(sub_report_title, "U.S. Sorghum, Barley, and Oats")] <- "Barley")
b <- within(b, commodity1[is.na(attribute3) == FALSE &
                            str_detect(sub_report_title, "U.S. Sorghum, Barley, and Oats")] <- "Oats")
b <- within(b, commodity1[is.na(attribute4) == FALSE &
                            str_detect(sub_report_title, "U.S. Rice Supply and Use")] <- "Total Rice")
b <- within(b, commodity1[is.na(attribute5) == FALSE &
                            str_detect(sub_report_title, "U.S. Rice Supply and Use")] <- "Long-grain Rice")
b <- within(b, commodity1[is.na(attribute6) == FALSE &
                            str_detect(sub_report_title, "U.S. Rice Supply and Use")] <- "Medium & Short-grain Rice")




# Combine columns ---------------------------------------------------------

attributecols <-
  c('attribute1',
    'attribute2',
    'attribute3',
    'attribute4',
    'attribute5',
    'attribute6')
market_yearcols <-
  c(
    'market_year1',
    'market_year2',
    'market_year3',
    'market_year4',
    'market_year5',
    'market_year6',
    'region_header1',
    'region_header2',
    'region_header3',
    'region_header4',
    'region_header5',
    'region_header6'
  )
forecast_monthcols <-
  c(
    'forecast_month1',
    'forecast_month2',
    'forecast_month3',
    'forecast_month4',
    'forecast_month5',
    'forecast_month6'
  )
commoditycols <- c('commodity1', 'commodity2', 'commodity3')
classcols <- c('attribute_group2')
regioncols <-
  c(
    'region1',
    'region2',
    'region3',
    'region4',
    'region5',
    'region6',
    'commodity_header1',
    'commodity_header2',
    'commodity_header3'
  )
sub_report_footercols <-
  c('sub_report_footer',
    'sub_report_footer2',
    'sub_report_footer3')
sub_report_titlecols <-
  c('sub_report_title', 'sub_report_title2', 'sub_report_title3')
unitcols <-
  c('sub_report_subtitle',
    'sub_report_subtitle3',
    'm2_unit_descr1',
    'Textbox2')



unite_rm_na <- function(data, cols) {
  column <- apply(data[cols], 1, function(x)toString(na.omit(x)))
  return(column)
}


WASDE1 <-
  b %>% mutate(sub_report_title = unite_rm_na(b, sub_report_titlecols)) %>%
  mutate(attribute = unite_rm_na(b, attributecols)) %>%
  mutate(market_year = unite_rm_na(b, market_yearcols)) %>%
  mutate(forecast_month = unite_rm_na(b, forecast_monthcols)) %>%
  mutate(commodity = unite_rm_na(b, commoditycols)) %>%
  mutate(region = unite_rm_na(b, regioncols)) %>%
  mutate(sub_report_footer = unite_rm_na(b, sub_report_footercols)) %>%
  mutate(unit = unite_rm_na(b, unitcols)) %>%
  mutate(class = unite_rm_na(b, classcols))  %>%
  select(
    -attributecols,
    -market_yearcols,
    -forecast_monthcols,
    -commoditycols,
    -regioncols,-sub_report_footer2,
    -sub_report_footer3,
    -sub_report_title2,
    -sub_report_title3,
    -unitcols,
    -attribute_group2
  )


# Create data tables to join with -----------------------------------------


sub_report_table <- tibble(
  sub_report = c('World Coarse Grain Supply and Use', 
                 'World Corn Supply and Use',
                 'U.S. Milk Supply and Use',
                 'U.S. Dairy Prices',
                 'World and U.S Supply and Use for Grains', 
                 'World and U.S. Supply and Use for Oilseeds', 
                 'U.S. Wheat Supply and Use',
                 'U.S. Feed Grain and Corn Supply and Use',
                 'U.S. Sorghum, Barley, and Oats Supply and Use',
                 'U.S. Cotton Supply and Use',
                 'U.S. Egg Supply and Use',
                 'U.S. Wheat by Class: Supply and Use',
                 'World Corn Supply and Use', 
                 'World Rice Supply and Use (Milled Basis)',
                 'U.S. Soybeans and Products Supply and Use (Domestic Measure)',
                 'World Rice Supply and Use (Milled Basis)',
                 'World Cotton Supply and Use',
                 'World Soybean Supply and Use',
                 'World Soybean Meal Supply and Use',
                 'U.S. Rice Supply and Use',
                 'World Soybean Oil Supply and Use',
                 'World and U.S. Supply and Use for Grains',
                 'World and U.S. Supply and Use for Cotton',
                 'U.S. Sugar Supply and Use',
                 'World Wheat Supply and Use',
                 'World Wheat Supply and Use',
                 'World Coarse Grain Supply and Use')
  ,
  sub_report_og = c("World Coarse Grain Supply and Use  1/  (Cont'd.)",
                    'World Corn Supply and Use  1/',
                    'U.S. Milk Supply and Use', 
                    "U.S. Dairy Prices",
                    'World and U.S Supply and Use for Grains  1/', 
                    'World and U.S. Supply and Use for Oilseeds  1/', 
                    'U.S. Wheat Supply and Use  1/',
                    'U.S. Feed Grain and Corn Supply and Use  1/',
                    'U.S. Sorghum, Barley, and Oats Supply and Use  1/', 
                    'U.S. Cotton Supply and Use  1/', 
                    'U.S. Egg Supply and Use', 
                    'U.S. Wheat by Class: Supply and Use',
                    "World Corn Supply and Use  1/  (Cont'd.)",
                    'World Rice Supply and Use  (Milled Basis)  1/',
                    'U.S. Soybeans and Products Supply and Use (Domestic Measure)  1/',
                    "World Rice Supply and Use  (Milled Basis)  1/  (Cont'd.)",
                    'World Cotton Supply and Use  1/',
                    'World Soybean Supply and Use  1/',
                    'World Soybean Meal Supply and Use  1/',
                    'U.S. Rice Supply and Use  1/',
                    'World Soybean Oil Supply and Use  1/',
                    'World and U.S. Supply and Use for Grains, Continued  1/',
                    'World and U.S. Supply and Use for Cotton  1/',
                    'U.S. Sugar Supply and Use  1/',
                    'World Wheat Supply and Use  1/',
                    "World Wheat Supply and Use  1/  (Cont'd.)",
                    "World Coarse Grain Supply and Use  1/"
  ))



WASDE2 <- full_join(sub_report_table, WASDE1, by= c('sub_report_og' = "sub_report_title"))


WASDE2 <- WASDE2 %>% filter(!sub_report %in% c('World and U.S Supply and Use for Grains',
                                               'World and U.S. Supply and Use for Cotton', 'World and U.S. Supply and Use for Oilseeds'))


WASDE2$attribute <- trimws(WASDE2$attribute, which = "both")
WASDE2$attribute <- str_replace_all(WASDE2$attribute, "[\r\n]", " ")


attr_table <- tibble(
  attribute = c("Domestic Total",
                "Domestic Total",
                "Domestic Total",
                "Domestic Total",
                "Domestic Total",
                "Exports",
                "Exports",
                "Ending Stocks",
                "Ending Stocks",
                "Ending Stocks",
                "Ending Stocks",
                "Beginning Stocks",
                "Beginning Stocks",
                "Beginning Stocks",
                "Production",
                "Production",
                "Production",
                "Production",
                "Production",
                "Imports",
                "Domestic Feed",
                "Domestic Feed",
                "Ending Commercial Stks",
                "Butter",
                "All Milk",
                "Total Supply",
                "Total Supply",
                "Total Supply",
                "Total Supply",
                "Total Use",
                "Total Use",
                "Seed",
                "Free Stocks",
                "Area Planted",
                "Feed and Residual",
                "CCC Inventory",
                "Area Planted",
                "Avg. Farm Price",
                "Commercial Use",
                "Nonfat Dry Milk",
                "Class III",
                "Area Harvested",
                "Avg. Farm Price",
                "Unaccounted",
                "Farm Use",
                "Outstanding Loans",
                "Yield",
                "Marketings",
                "Dry Whole Milk",
                "Yield",
                "Food, Seed & Industrial",
                "Food, Seed & Industrial",
                "Food, Seed & Industrial",
                "Food, Feed & other Industrial",
                "Area Planted",
                "Cheese",
                "Dry Whey",
                "Area Harvested",
                "Domestic Use",
                "Domestic Use",
                "Class IV",
                "Residual",
                "Commercial Exports",
                "Area Harvested",
                "Deliveries - Food",
                "Food",
                "Loss",
                "CCC Net Removals",
                "Domestic",
                "Domestic Crush",
                "Exports",
                "Exports",
                "Supply - Beginning Stocks",
                "Supply - Beginning Stocks",
                "Use - Exports",
                "Hatching Use",
                "Disappearance - Total",
                "Disappearance - Total",
                "Disappearance - Per Capita (number)",
                "Beg. Commercial Stocks",
                "Total Cml. Supply",
                "Ending Stocks",
                "Ethanol & by-products",
                "Domestic & Residual",
                "Rough",
                "Milled (rough equiv.)",
                "Avg. Milling Yield (%)",
                "Avg. Farm Price",
                "Area Harvested",
                "Yield",
                "Crushings",
                "Domestic Disappearance",
                "Avg. Farm Price",
                "Avg. Farm Price",
                "Beet Sugar",
                "Cane Sugar",
                "Cane Sugar - Florida",
                "Cane Sugar - Hawaii",
                "Cane Sugar - Louisiana",
                "Cane Sugar - Texas",
                "Imports - TRQ",
                "Imports - Other Program",
                "Other",
                "Deliveries - Other",
                "Mexico",
                "Deliveries",
                "Miscellaneous",
                "Stocks to Use Ratio",
                "Avg. Farm Price",
                "Ethanol for Fuel",
                "Methyl Ester",
                "Avg. Farm Price",
                "Ending Commercial Stocks",
                "CCC Donations",
                "Food, Feed & other Industrial",
                "For Methyl Ester",
                "Domestic Commercial Use",
                "Avg. Farm Price",
                "Biodiesel",
                "Avg. Farm Price",
                "Avg. Farm Price",
                "Unaccounted",
                "Avg. Farm Price ($/cwt) - California",
                "Avg. Farm Price ($/cwt) - Other States",
                "Avg. Farm Price",
                "Avg. Farm Price",
                "Residual",
                "CCC Net Removals",
                "Commercial Use",
                "Other", NA), 
  attr_og = c("Domestic  Total 2/",
              "Domestic, Total",
              "Total /2  Domestic",
              "Total Domestic",
              "Domestic  Total",
              "Exports",
              "Exports  8/",
              "Ending  Stocks",
              "Ending Stocks",
              "Ending stocks",
              "Ending Stocks 8/",
              "Beginning  Stocks",
              "Beginning Stocks 2/",
              "Beginning Stocks",
              "Production",
              "Production 3/",
              "Production 2/",
              "Production 4/",
              "Production 1/",
              "Imports",
              "Domestic  Feed",
              "Domestic  Feed 2/",
              "Ending Commercial Stks",
              "Butter",
              "All Milk  3/",
              "Total Supply",
              "Supply, Total",
              "Supply, Total 3/",
              "Supply, Total  7/",
              "Use, Total",
              "Total Use",
              "Seed",
              "Free Stocks",
              "Area Planted",
              "Feed and Residual",
              "CCC Inventory",
              "Area Planted (mil. acres)",
              "Avg. Farm Price ($/bu)  2/",
              "Commercial Use  2/",
              "Nonfat Dry Milk",
              "Class III",
              "Area Harvested",
              "Avg. Farm Price ($/bu)  4/",
              "Unaccounted 3/",
              "Farm Use",
              "Outstanding Loans",
              "Yield (bushels/acre)",
              "Marketings",
              "Dry Whole Milk",
              "Yield per Harvested Acre",
              "Food, Seed & Industrial 2/",
              "Food, Seed & Industrial",
              "Food Seed & Industrial",
              "Food, Feed & other Industrial 3/",
              "Planted",
              "Cheese",
              "Dry Whey",
              "Harvested",
              "Domestic  Use",
              "Domestic Use",
              "Class IV",
              "Residual",
              "Commercial Exports",
              "Area Harvested (mil. acres)",
              "Food 6/",
              "Food",
              "Loss    /2",
              "CCC Net Removals  1/",
              "Domestic",
              "Domestic  Crush",
              "Exports, Total",
              "Exports, Total  4/",
              "Supply           Beginning Stocks",
              "Supply           Beginning Sto", 
              "Use           Exports",
              "Hatching Use",
              "Disappearance               Total",
              "Disappearance               To",
              "Per Capita (number)",
              "Beg. Commercial Stocks",
              "Total Cml. Supply",
              "Ending Stocks, Total",
              "Ethanol & by-products 3/",
              "Domestic & Residual  3/",
              "Rough",
              "Milled (rough equiv.)",
              "Avg. Milling Yield (%)  5/",
              "Avg. Farm Price ($/cwt)  6/",
              "Harvested Acres (mil.)",
              "Yield (pounds/acre)",
              "Crushings",
              "Domestic Disappearance",
              "Avg. Farm Price (c/lb)  2/",
              "Avg. Farm Price ($/s.t.)  2/",
              "Beet Sugar",
              "Cane Sugar",
              "Florida",
              "Hawaii",
              "Louisiana",
              "Texas",
              "TRQ 3/",
              "Other Program 4/",
              "Other 5/",
              "Other 7/",
              "Mexico",
              "Deliveries",
              "Miscellaneous",
              "Stocks to Use Ratio",
              "Avg. Farm Price 4/",
              "Ethanol for Fuel  2/",
              "Methyl Ester",
              "Avg. Farm Price ($/bu)  3/",
              "Ending Commercial Stocks",
              "CCC Donations",
              "Food, Feed & other Industrial",
              "For Methyl Ester",
              "Domestic Commercial Use",
              "Avg. Price ($/s.t.)  2/",
              "Biodiesel 3/",
              "Avg. Farm Price ($/cwt)  1/ 6/ 9/",
              "Avg. Farm Price ($/cwt)  6/ 9/",
              "Unaccounted 2/",
              "California 10/",
              "Other States 1/",
              "Avg. Price (c/lb)  2/",
              "Avg. Farm Price 3/",
              "Residual 5/",
              "CCC Net Removals  2/",
              "Commercial Use  3/",
              "Other 6/", NA
  )
)


WASDE3 <- full_join(attr_table, WASDE2, by= c('attr_og' = "attribute")) 

WASDE3$unit <- trimws(WASDE3$unit, which = "both")

unit_table <- tibble(
  unit = c("Million Metric Tons",
           "Million Bushels",
           "Million Bushels",
           "Million Bushels",
           "Million 480-Pound Bales",
           NA, NA
  ),
  unit_og = c('(Million Metric Tons)',
              "Million Bushels", 
              "Million",
              "Bushels",
              "(Million 480-Pound Bales)",
              '(Rough Equivalent of Rough and Milled Rice)', ""
  ))

WASDE4 <- full_join(unit_table, WASDE3, by= c('unit_og' = "unit")) 


WASDE4$region <- trimws(WASDE4$region, which = "both")

region_table <- tibble(
  region = c('Ukraine','World','United States','Total Foreign','Major Exporters','Argentina','Australia',
             'Canada','Major Importers','EU-27','Japan','Mexico','N. Afr & Mideast','Saudi Arabia',
             'Southeast Asia','South Korea','Brazil','China','FSU-12','Russia','European Union','EU-27',
             'World Less China','South Africa','Egypt','Southeast Asia','Selected Other','Major Importers',
             'Sel. Mideast','N. Africa','Pakistan','Southeast Asia','India','Kazakhstan','European Union',
             'Nigeria','Sel. Mideast','Bangladesh','N. Africa','Thailand','Vietnam','Indonesia',
             'Philippines','Burma','C. Amer & Carib','World','Major Exporters','Major Importers','EU-27',
             'European Union','Southeast Asia','Paraguay','Southeast Asia','North Africa','World',
             'Central Asia','Afr. Fr. Zone','S. Hemis','Major Importers','EU-27','Turkey','S. Hemis.',
             'European Union', NA
  ),
  region_og = c('Ukraine','World  3/', 'United States','Total Foreign','Major Exporters  4/','Argentina',
                'Australia','Canada','Major Importers  5/','EU-27  5/','Japan','Mexico','N. Afr & Mideast  7/',
                'Saudi Arabia','Southeast Asia  8/','South Korea','Brazil','China','FSU-12','Russia',
                'European Union  6/','EU-27  6/','World Less China','South Africa','Egypt','Southeast Asia  7/',
                'Selected Other','Major Importers  6/','Sel. Mideast  7/','N. Africa  8/','Pakistan',
                'Southeast Asia  9/','India','Kazakhstan','European Union  5/', 'Nigeria','Sel. Mideast  8/',
                'Bangladesh','N. Africa  7/','Thailand','Vietnam','Indonesia','Philippines','Burma',
                'C. Amer & Carib  8/','World  2/','Major Exporters  3/', 'Major Importers  4/','EU-27',
                'European Union','Southeast Asia','Paraguay','Southeast Asia 5/','North Africa 5/',
                'World','Central Asia  5/','Afr. Fr. Zone  6/','S. Hemis  7/','Major Importers  8/',
                'EU-27  9/','Turkey','S. Hemis.  7/','European Union  9/',""
  ))

WASDE5 <- full_join(region_table, WASDE4, by= c('region_og' = "region"))



month_table <- tibble(
  forecast_month = c('July','May','June','April','March','February','January','December',
                     'November', 'October', 'September', 'August', 'June', 'April', 'March',
                     'February', 'January', 'December', 'November', 'October',
                     'September','August', 'July', NA, NA
  ),
  month_og = c('Jul','May','Jun','Apr','Mar','Feb','Jan','Dec',
               'Nov', 'Oct', 'Sep', 'Aug', 'June', 'April', 'March',
               'February', 'January', 'December', 'November', 'October',
               'September','August', 'July', "", NA))

WASDE6 <- full_join(month_table, WASDE5, by= c('month_og' = "forecast_month"))             



WASDE6$market_year <- trimws(WASDE6$market_year, which = "both")

WASDE6 <- WASDE6 %>% mutate(year_type = NA)
WASDE6 <- within(WASDE6, year_type[str_detect(market_year, "Proj.")] <- 'Projection')
WASDE6 <- within(WASDE6, year_type[str_detect(market_year, "Est.")] <- 'Estimate')
WASDE6 <- within(WASDE6, year_type[str_detect(market_year, paste(c("Proj.", "Est."), 
                                                                 collapse = '|'), negate = TRUE)] <- 'Actual')



year_table <- tibble(
  market_year = c('2012', '2011','2010','2018','2017','2016','2015','2014','2013','2010','2011',
                  '2018','2017', '2016','2015','2014','2013','2012', '2010','2010','2013','2011',
                  '2012','2012','2013','2011','2010','2018','2019','2017','2016','2015',
                  '2014',
                  "2019", 
                  '2011', 
                  '2010', 
                  '2018', 
                  '2017', 
                  '2016', 
                  '2015', 
                  '2014', 
                  '2013', 
                  '2012', 
                  '2011',
                  '2010',
                  '2017',
                  '2016',
                  '2015',
                  '2014',
                  '2013',
                  '2012',
                  '2018',
                  "2020",
                  '2011',
                  '2018',
                  '2017',
                  '2016',
                  '2015',
                  '2014',
                  '2013',
                  '2012',
                  '2010',
                  '2011',
                  '2009',
                  '2008',
                  '2009',
                  '2017',
                  '2016',
                  '2015',
                  '2014',
                  '2013',
                  '2012',
                  '2011',
                  '2009', 
                  '2010',
                  '2010',
                  '2011',
                  '2012',
                  '2011',
                  '2009','2008','2017','2018','2016','2015','2014','2013','2012', "", NA
  ),
  year_og = c('2012/13 Proj.', '2011/12 Proj.','2010/11','2018/19 Proj.','2017/18 Proj.','2016/17 Proj.',
              '2015/16 Proj.','2014/15 Proj.','2013/14 Proj.','2010/11 (Proj.)','2011/12 (Proj.)',
              '2018/19 (Proj.)','2017/18 (Proj.)', '2016/17 (Proj.)', 
              '2015/16 (Proj.)', 
              '2014/15 (Proj.)', 
              '2013/14 (Proj.)', 
              '2012/13 (Proj.)', 
              '2010/11 Proj.',
              '2010/011 Proj.',
              '2013/014 Proj.',
              '2011/012 Proj.',
              '2012/013 Proj.',
              '2012 Proj.',
              '2013 Proj.',
              '2011 Proj.',
              '2010 Est.',
              '2018 Proj.',
              '2019 Proj.',
              '2017 Proj.',
              '2016 Proj.',
              '2015 Proj.',
              '2014 Proj.',
              "2019/20 Proj.",
              '2011/12 (Est.)', 
              '2010/11 (Est.)', 
              '2018/19 (Est.)', 
              '2017/18 (Est.)', 
              '2016/17 (Est.)', 
              '2015/16 (Est.)', 
              '2014/15 (Est.)', 
              '2013/14 (Est.)', 
              '2012/13 (Est.)', 
              '2011/12 Est.',
              '2010/11 Est.',
              '2017/18 Est.',
              '2016/17 Est.',
              '2015/16 Est.',
              '2014/15 Est.',
              '2013/14 Est.',
              '2012/13 Est.',
              '2018/19 Est.',
              "2020 Proj.",
              '2011 Est.',
              '2018 Est.',
              '2017 Est.',
              '2016 Est.',
              '2015 Est.',
              '2014 Est.',
              '2013 Est.',
              '2012 Est.',
              '2010',
              '2011',
              '2009/10',
              '2008/09',
              '2009/10 Est.',
              '2017/18',
              '2016/17',
              '2015/16',
              '2014/15',
              '2013/14',
              '2012/13',
              '2011/12',
              '2009/10 (Est.)', 
              '2010/011 Est.',
              '2010/011',
              '2011/012 Est.',
              '2012/013 Est.',
              '2011/012',
              '2009','2008','2017','2018','2016','2015','2014','2013','2012', "", NA
  ))

WASDE7 <- full_join(year_table, WASDE6, by= c('year_og' = "market_year"))  

WASDE7$commodity <- trimws(WASDE7$commodity, which = "both")

WASDE7$commodity <- str_replace_all(WASDE7$commodity, "[\r\n]", "")

commodity_table <- tibble(
  commodity = c(NA,   
                'Sorghum',
                'Total Rice',
                'Feed Grains',
                'Soybeans',
                'Long-grain Rice',
                'Medium & Short-grain Rice',
                'Corn',
                'Barley',
                'Oats',
                'Soybean Oil',
                'Soybean Meal'
                
  ),
  commodity_og = c(	
    NA,
    'Sorghum',
    'Total Rice',
    'Feed Grains',
    'Soybeans',
    'Long-grain Rice',
    'Medium & Short-grain Rice',
    'Corn',
    'Barley',
    'Oats',
    'Soybean Oil',
    'Soybean Meal'
  ))

WASDE8 <- full_join(commodity_table, WASDE7, by= c('commodity_og' = "commodity"))


WASDE8$class <- trimws(WASDE8$class , which = "both")

WASDE8$class <- str_replace_all(WASDE8$class, "[\r\n]", "")

class_table <- tibble(
  class = c("",
            'Hard Red Winter',
            'Hard Red Spring',
            'Soft Red Winter',
            'White',
            'Durum',
            'Total',
            'Soft Red Winter',
            'Hard Red Winter',
            'Hard Red Spring'
  ),
  class_og = c(	
    "",
    'HardWinter',
    'HardSpring',
    'SoftRed',
    'White',
    'Durum',
    'Total',
    'Soft RedWinter',
    'Hard RedWinter',
    'Hard RedSpring'
  ))


WASDE9 <- full_join(class_table, WASDE8, by= c('class_og' = "class"))

#delete old columns
WASDE10 <-
  WASDE9 %>% select(
    -commodity_og,
    -attr_og,
    -sub_report_og,
    -unit_og,
    -region_og,
    -month_og,
    -class_og,
    -year_og
  )



# Filling in the correct units --------------------------------------------

#first change unit column to NA
WASDE10 <-
  within(WASDE10, unit[sub_report %in% c(
    'World Wheat Supply and Use',
    'World Soybean Supply and Use',
    'World Corn Supply and Use' ,
    'World Soybean Meal Supply and Use',
    'World Soybean Oil Supply and Use'
  )] <- NA)


WASDE10 <-
  within(WASDE10, unit[!(
    attribute %in% c(
      'Area Planted',
      'Area Harvested',
      'Yield per Harvested Acre',
      "Avg. Farm Price",
      "Yield"
    )
  ) &
    str_detect(sub_report, paste(
      c(
        "U.S. Wheat",
        "U.S. Feed Grain and Corn Supply",
        "U.S. Sorghum, Barley, and Oats Supply",
        'World Corn Supply and Use',
        'World Soybean Supply and Use',
        'World Wheat Supply and Use'
      ),
      collapse = '|'
    ))] <- 'Million Bushels')



WASDE10 <-
  within(WASDE10, unit[(attribute %in% c('Area Planted', 'Area Harvested')) &
                         str_detect(sub_report, paste(
                           c(
                             "U.S. Wheat",
                             "U.S. Feed Grain and Corn Supply",
                             "U.S. Rice Supply and Use",
                             "U.S. Soybeans and Products Supply",
                             "U.S. Cotton Supply and Use",
                             "U.S. Sorghum, Barley, and Oats Supply and Use"
                           ),
                           collapse = '|'
                         ))] <- 'Million Acres')



WASDE10 <- within(WASDE10, unit[!(attribute %in% c('Area Planted', 'Area Harvested', 'Yield', "Avg. Farm Price")) &
                                  str_detect(sub_report, "U.S. Rice Supply and Use")] <-
                    'Million Hundredweight')


WASDE10 <-
  within(WASDE10, unit[!(attribute %in% c('Area Planted', 'Area Harvested', "Avg. Farm Price", "Yield")) &
                         str_detect(sub_report, "U.S. Soybeans and Products Supply") &
                         commodity == 'Soybeans'] <- 'Million Acres')

WASDE10 <- within(WASDE10, unit[(attribute == 'Avg. Farm Price') &
                                  str_detect(sub_report,
                                             "U.S. Soybeans and Products Supply and Use (Domestic Measure)") &
                                  commodity == 'Soybean Oil'] <- 'c/lb')

WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Soybean Meal Supply and Use")] <-
           "Soybean Meal")
WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Soybean Oil Supply and Use")] <-
           "Soybean Oil")

WASDE10 <-
  within(WASDE10, unit[!(attribute %in% c("Avg. Farm Price")) &
                         str_detect(sub_report, paste(
                           c(
                             "U.S. Soybeans and Products Supply",
                             'World Soybean Oil Supply and Use'
                           ),
                           collapse = '|'
                         )) & commodity == 'Soybean Oil'] <- 'Million Pounds')

WASDE10 <-
  within(WASDE10, unit[str_detect(sub_report, paste(
    c(
      "U.S. Soybeans and Products Supply",
      'World Soybean Meal Supply and Use'
    ),
    collapse = '|'
  )) & commodity == 'Soybean Meal'] <- 'Thousand Short Tons')

WASDE10 <- within(WASDE10, unit[str_detect(sub_report, "U.S. Sugar Supply and Use")] <- '1,000 Short Tons, Raw Value')

WASDE10 <- within(WASDE10, unit[!(attribute %in% c('Area Planted', 'Area Harvested', 'Yield', 'Avg. Farm Price')) & 
                                  str_detect(sub_report, "U.S. Cotton Supply and Use")] <- 'Million 480 Pound Bales')

WASDE10 <- within(WASDE10, unit[(attribute == 'Avg. Farm Price') & 
                                  str_detect(sub_report, "U.S. Cotton Supply and Use")] <- 'c/lb')

WASDE10 <-
  within(WASDE10, unit[(attribute == 'Avg. Farm Price') &
                         str_detect(sub_report, "U.S. Rice Supply and Use")] <- '$/cwt')

WASDE10 <- WASDE10[!(
  WASDE10$attribute %in% c(
    'Avg. Farm Price ($/cwt) - California',
    'Avg. Farm Price ($/cwt) - Other States'
  )
), ]

WASDE10 <- within(WASDE10, unit[(attribute == 'Avg. Farm Price') &
                                  str_detect(sub_report,
                                             "U.S. Soybeans and Products Supply and Use (Domestic Measure)") &
                                  commodity == 'Soybean Meal'] <-
                    '$/s.t.')
WASDE10 <-
  within(WASDE10, unit[attribute %in% ("Avg. Farm Price") &
                         str_detect(sub_report, paste(
                           c(
                             "U.S. Wheat",
                             "U.S. Feed Grain and Corn Supply",
                             "U.S. Sorghum, Barley, and Oats Supply",
                             "U.S. Soybeans"
                           ),
                           collapse = '|'
                         ))] <- '$/bu')

WASDE10 <-
  within(WASDE10, unit[attribute %in% ("Yield") &
                         str_detect(sub_report, paste(
                           c(
                             "U.S. Sorghum, Barley, and Oats",
                             "U.S. Feed Grain and Corn Supply",
                             "U.S. Wheat",
                             'U.S. Soybeans and Products Supply'
                           ),
                           collapse = '|'
                         ))] <- 'bu/acre')

WASDE10 <-
  within(WASDE10, unit[(attribute == 'Yield') &
                         sub_report %in% c("U.S. Rice Supply and Use", 'U.S. Cotton Supply and Use')] <-
           'lb/acre')


#Fill in the correct commodities for the World data tables
WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c(
    "U.S. Wheat Supply and Use",
    "U.S. Wheat by Class: Supply and Use",
    "World Wheat Supply and Use"
  )] <- "Wheat")

WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Coarse Grain Supply and Use")] <-
           "Coarse Grain")
WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Corn Supply and Use")] <-
           "Corn")
WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Rice Supply and Use (Milled Basis)")] <-
           "Rice")
WASDE10 <-
  within(WASDE10, commodity[sub_report %in% c("World Soybean Supply and Use")] <-
           "Soybeans")



WASDE10 <- within(WASDE10, commodity[sub_report == "U.S. Sugar Supply and Use"] <- "Sugar")

WASDE10 <-
  within(WASDE10, commodity[sub_report  %in% c("U.S. Cotton Supply and Use", "World Cotton Supply and Use")] <-
           "Cotton")

WASDE10 <- within(WASDE10, commodity[sub_report %in% c("U.S. Egg Supply and Use")] <- "Eggs")
WASDE10 <- within(WASDE10, commodity[sub_report %in% c("U.S. Milk Supply and Use")] <- "Milk")

WASDE10 <- within(WASDE10, unit[sub_report %in% c("U.S. Egg Supply and Use")] <- "Million Dozen")
WASDE10 <- within(WASDE10, unit[sub_report %in% c("U.S. Milk Supply and Use")] <- "Billion Pounds")

WASDE10 <- within(WASDE10, commodity[attribute %in% c("Cheese", "Butter", "Nonfat Dry Milk", "Dry Whey") 
                                     & sub_report %in% c("U.S. Dairy Prices")] <- "Dairy Product")
WASDE10 <- within(WASDE10, unit[attribute %in% c("Cheese", "Butter", "Nonfat Dry Milk", "Dry Whey") 
                                & sub_report %in% c("U.S. Dairy Prices")] <- "Dollars Per Pound")

WASDE10 <- within(WASDE10, commodity[attribute %in% c("Class III", "Class IV", "All Milk") 
                                     & sub_report %in% c("U.S. Dairy Prices")] <- "Milk")
WASDE10 <- within(WASDE10, unit[attribute %in% c("Class III", "Class IV", "All Milk") 
                                & sub_report %in% c("U.S. Dairy Prices")] <- "Dollars Per Cwt")



# Deleting duplicate rows -------------------------------------------------



#New column that only gives the report month

WASDE10$Report_justmonth <- word(WASDE10$Report_Month,1)

#if Forecast month does not match report month, then delete row

WASDE11 <-
  WASDE10[!(
    WASDE10$forecast_month != WASDE10$Report_justmonth &
      is.na(WASDE10$forecast_month) == FALSE
  ), ]


#deleting duplicate rows


WASDE11 <- WASDE11 %>% select(-Report_justmonth, -source_modified, -req_date, -source_url) %>% distinct()


# Converting million metric tons to the correct unit for each commodity --------
#Cotton already is converted correctly
#Coarse grains is not in the US tables, and rice converts to the US long grain rather than total

#putting each conversion into a separate column so that we can combine later
#WHEAT & SOYBEANS 1 metric ton = 36.7437 bushels
#CORN 1 metric ton = 39.36825 bushels
#SOYBEAN MEAL 1 million metic ton = 1102.423 thousand short ton
#SOYBEAN OIL 1 metric ton = 2204.62 pounds
WASDE12 <- WASDE11 %>% 
  mutate(wheat = ifelse(sub_report %in% c('World Wheat Supply and Use','World Soybean Supply and Use'),
                        (Cell_Value_L*36.7437), NA)) %>% 
  mutate(corn =  ifelse(sub_report %in% c('World Corn Supply and Use'),
                        (Cell_Value_L*39.36825),NA)) %>% 
  mutate(soybean_meal =  ifelse(sub_report %in% c('World Soybean Meal Supply and Use'),
                                (Cell_Value_L*1102.423),NA)) %>% 
  mutate(soybean_oil =  ifelse(sub_report %in% c('World Soybean Oil Supply and Use'),
                               (Cell_Value_L*2204.62),NA))

#Putting NAs in Cell_Value_L column so that we can replace with converted values
WASDE12 <-
  within(WASDE12, Cell_Value_L[sub_report %in% c(
    'World Wheat Supply and Use',
    'World Soybean Supply and Use',
    'World Corn Supply and Use' ,
    'World Soybean Meal Supply and Use',
    'World Soybean Oil Supply and Use'
  )] <- NA)

wasdecols <- c('wheat', 'corn', 'soybean_meal', 'soybean_oil', 'Cell_Value_L')

#uniting columns and then deleting unused columns
WASDE12 <-
  WASDE12 %>% mutate(Value = apply(WASDE12[wasdecols], 1, function(x)
    toString(na.omit(x)))) %>%
  select(-wheat,-corn,-soybean_meal,-soybean_oil,-Cell_Value_L)

WASDE12 <- within(WASDE12, region[str_detect(sub_report, "U.S.")] <- 'United States')



# Delete duplicate rows in the World Tables -------------------------------


#Do not include soybeans because we don't want to delete domestic total in the world soybean table

WASDE13 <-
  WASDE12[!(
    WASDE12$commodity %in% c('Corn', 'Wheat', 'Soybean Meal', 'Soybean Oil', 'Cotton') &
      WASDE12$sub_report %in% c(
        'World Wheat Supply and Use',
        'World Corn Supply and Use' ,
        'World Soybean Meal Supply and Use',
        'World Soybean Oil Supply and Use',
        'World Cotton Supply and Use'
      )
    &
      WASDE12$region == 'United States' &
      WASDE12$attribute %in% c(
        'Beginning Stocks',
        'Production',
        'Imports',
        'Domestic Feed',
        'Domestic Total',
        'Exports',
        'Ending Stocks',
        'Domestic Use',
        'Loss'
      )
  ), ]

#Now do soybeans
WASDE13 <-
  WASDE13[!(
    WASDE13$commodity == 'Soybeans' &
      WASDE13$sub_report == 'World Soybean Supply and Use'
    &
      WASDE13$region == 'United States' &
      WASDE13$attribute %in% c(
        'Beginning Stocks',
        'Production',
        'Imports',
        'Domestic Crush',
        'Exports',
        'Ending Stocks'
      )
  ), ]

colnames(WASDE13)[colnames(WASDE13)=='Cell_Value_H'] <- 'Value2'

#Filtering for 
WASDE14 <-
  WASDE13 %>% filter(
    sub_report %in% c(
      'World Wheat Supply and Use',
      'World Corn Supply and Use' ,
      'World Soybean Meal Supply and Use',
      'World Soybean Oil Supply and Use',
      'World Coarse Grain Supply and Use',
      'U.S. Soybeans and Products Supply and Use (Domestic Measure)',
      'U.S. Sorghum, Barley, and Oats Supply and Use',
      'U.S. Feed Grain and Corn Supply and Use',
      'U.S. Wheat by Class: Supply and Use',
      'U.S. Wheat Supply and Use',
      'World and U.S. Supply and Use for Grains'
    )
  )

WASDE14$Value <- as.numeric(as.character(WASDE14$Value))
WASDE14 <- WASDE14 %>% 
  mutate_if(is.numeric, round, digits = 2)

WASDE14 <- WASDE14 %>% select(-sub_report_footer)

 
##database


if (dbExistsTable(databasename, "WASDEClean"))
{
  dbData <- dbReadTable(databasename, "WASDEClean")
  cat("Number of rows in database before insert:", nrow(dbData), "\n")
  data <- dplyr::setdiff(WASDE14, dbData)
}

#append into database monthly when the report comes out
WASDEready <- sqlData(databasename, WASDE14, row.names = FALSE)
cat("Number of rows to load into database:", nrow(WASDEready), "\n")

dbWriteTable(databasename, "WASDEClean", WASDEready, append = TRUE)

dbData <- dbReadTable(databasename, "WASDEClean")
cat("Number of rows in database after insert:", nrow(dbData), "\n")
 
                                   
# Pivot out the data  for exploration------------------------------------------------------

WASDE15 <- tibble::rowid_to_column(WASDE14, "row")
WASDE15 <- WASDE15 %>% spread(key = attribute, value = Value)




WASDE16 <- WASDE14 %>% filter(commodity == 'Corn' & region == 'United States' & str_detect(Report_Month, "April")) 
#View(WASDE13 %>% filter(str_detect(page_title, 'WASDE - 588 - ') & region == 'United States' & attribute == 'Beginning Stocks' & (str_detect(sub_report,'Soybean'))))

write.csv(WASDE14, 'WASDE14.csv')
write.csv(WASDE15, 'WASDE15.csv')

#Missing pages: 588 - 31,32,35,36,37


# linear regression for corn ----------------------------------------------
corn <- WASDE15 %>% filter(commodity == 'Corn' & region == 'United States' & str_detect(Report_Month, "April")) 

cornprod <- corn %>%  select(market_year, year_type, Production) %>% na.omit()
cornexports <- corn %>% select(market_year,year_type, Exports) %>% na.omit()
cornendstocks <- corn %>% select(market_year, year_type, 'Ending Stocks') %>% na.omit()
cornbegstocks <- corn %>% select(market_year, year_type, 'Beginning Stocks') %>% na.omit()
cornsupply <- corn %>% select(market_year,year_type, 'Total Supply') %>% na.omit()
cornuse <- corn %>% select(market_year,  year_type, 'Total Use') %>% na.omit()
cornfeed <- corn %>% select(market_year, year_type, 'Feed and Residual') %>% na.omit()
cornplanted <- corn %>% select(market_year, year_type, 'Area Planted') %>% na.omit()
cornyield <- corn %>% select(market_year, year_type, Yield) %>% na.omit()
cornindus <- corn %>% select(market_year, year_type, 'Food, Seed & Industrial') %>% na.omit()
cornharvest <- corn %>% select(market_year, year_type, 'Area Harvested') %>% na.omit()
corndototal <- corn %>% select(market_year, year_type, 'Domestic Total') %>% na.omit()
cornimports <- corn %>% select(market_year, year_type, 'Imports') %>% na.omit()

options(scipen=999)

cornp <- inner_join(cornprod, cornexports) %>% inner_join(.,cornendstocks) %>%
  inner_join(.,cornbegstocks) %>% inner_join(.,cornsupply) %>% inner_join(.,cornuse) %>% inner_join(.,cornfeed) %>% 
 inner_join(.,cornindus) %>% 
  inner_join(.,corndototal) %>% inner_join(.,cornyield) %>% inner_join(.,cornplanted)  %>% inner_join(.,cornharvest) %>% 
  inner_join(.,cornimports)

cornp$'Stocks to Use ratio' <- cornp$`Ending Stocks` / cornp$`Total Use`
                
#####Finding variables correlated to Stocks to Use Ratio


###########Doing multiple variables at once. But am unable to group by year_type, Actual
Actualcorn <- cornp %>% filter(year_type == 'Actual')

corncols <- Actualcorn %>% select(Production:Imports)

model <- map(corncols, function(x) {lm(`Stocks to Use ratio` ~ x, data = Actualcorn)})

glance <- map(model, function(x) glance(x))

glance <- glance %>% map_df(~unlist(.x))

glance$stats <- c('r.squared', 'adj.r.squared', 'sigma', 'statistic', 'p.value', 'df', 'logLik', 'AIC', 'BIC', 'deviance', 'df.residual')

View(glance)

sprglance <- glance %>% gather('r.squared', 'adj.r.squared', 'sigma', 'statistic', 'p.value', 'df', 
                               'logLik', 'AIC', 'BIC', 'deviance', 'df.residual', 10)

###########Doing multiple variables at once. But am unable to group by year_type, Actual
Estimatecorn <- cornp %>% filter(cornp$year_type == 'Estimate')

corncols <- Estimatecorn %>% select(Production:Imports)

model <- map(corncols, function(x) {lm(`Stocks to Use ratio` ~ x, data = Estimatecorn)})

glance <- map(model, function(x) glance(x))

glance <- glance %>% map_df(~unlist(.x))

glance$stats <- c('r.squared', 'adj.r.squared', 'sigma', 'statistic', 'p.value', 'df', 'logLik', 'AIC', 'BIC', 'deviance', 'df.residual')

View(glance)

###########Doing multiple variables at once. But am unable to group by year_type, Projection
Projectioncorn <- cornp %>% filter(cornp$year_type == 'Projection')

corncols <- Projectioncorn %>% select(Production:Imports)

model <- map(corncols, function(x) {lm(`Stocks to Use ratio` ~ x, data = Projectioncorn)})

glance <- map(model, function(x) glance(x))

glance <- glance %>% map_df(~unlist(.x))

glance$stats <- c('r.squared', 'adj.r.squared', 'sigma', 'statistic', 'p.value', 'df', 'logLik', 'AIC', 'BIC', 'deviance', 'df.residual')

View(glance)
####trying to group and do multiple variables but its impossible


yeartype_model <- function(df) {map(corncols, function(x) {lm(Production ~ x, data = df)})}

by_yeartype <- cornp %>% group_by(year_type) %>% nest()
by_yeartype <- by_yeartype %>% map(data, ~ yeartype_model)

map(model, broom::glance)

#####grouping by year_type one variable at a time
by_yeartype <- cornp %>% group_by(year_type) %>% nest()

yeartype_model <- function(df) {lm(`Stocks to Use ratio` ~ Yield + `Feed and Residual` + `Food, Seed & Industrial`, data = df)} 

by_yeartype <- by_yeartype %>% 
  mutate(model = map(data, yeartype_model))


by_yeartype <- by_yeartype %>% mutate(
  resids = map2(data, model, add_residuals)
)

resids <- unnest(by_yeartype, resids)


glance <- by_yeartype %>% 
  mutate(glance = map(model, broom::glance)) %>% 
  unnest(glance,.drop = TRUE)

glance %>% 
  arrange(r.squared)
